" Get current absolute path to this file and the script bin/.
let s:path = fnamemodify(resolve(expand('<sfile>:p')), ':h')
let g:fang#VimAutoformatExtensionsBin = resolve(s:path . "/../bin")

" Wraps the given command that is expected to mutate the input filename into a
" variant that reads from stdin and prints the formatted version to stdout.
function! g:fang#MutateFileWrapper(cmd)
  return '"' . g:fang#VimAutoformatExtensionsBin . "/mutate_file_wrapper.sh " . a:cmd . '"'
endfunction

" Declares a formatter for the given filetype. cmd must be a quoted command
" that will be passed to mutate_file_wrapper.sh.
function! g:fang#DeclareMutatingFormatter(filetype, cmd)
  let l:formatdef = "fang_" . a:filetype . "_autogenerated"
  execute "let g:formatdef_" . l:formatdef . " = g:fang#MutateFileWrapper(" . a:cmd . ")"
  let l:formatters = "g:formatters_" . a:filetype
  if !exists(l:formatters)
    execute "let " . l:formatters . " = []"
  endif

  execute('let l:exists = index(' . l:formatters . ', "' . l:formatdef . '") == -1')
  if l:exists
    execute 'call add(' . l:formatters . ', "' . l:formatdef . '")'
  endif
endfunction
